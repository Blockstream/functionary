//{{ Liquid }}
//Copyright (C) {{ 2015,2016,2017,2018 }}  {{ Blockstream }}

//This program is free software: you can redistribute it and/or modify
//it under the terms of the GNU Affero General Public License as published by
//the Free Software Foundation, either version 3 of the License, or
//(at your option) any later version.

//This program is distributed in the hope that it will be useful,
//but WITHOUT ANY WARRANTY; without even the implied warranty of
//MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//GNU Affero General Public License for more details.

//You should have received a copy of the GNU Affero General Public License
//along with this program.  If not, see <http://www.gnu.org/licenses/>.


//! # Build script
//! Generates some constants at build-time and puts them in $OUT_DIR/build_constants.rs

fn main() {
    #[cfg(feature = "build-constants")]
    {
        use std::env;
        use std::fs::File;
        use std::io::Write;
        use std::path::Path;
        use std::process::Command;

        let out_dir = env::var("OUT_DIR").unwrap();
        let dest_path = Path::new(&out_dir).join("build_constants.rs");

        let git_revparse_id = String::from_utf8(
            Command::new("git").arg("rev-parse").arg("HEAD").output().unwrap().stdout
        ).unwrap().trim().to_owned();

        let commit_id = if !git_revparse_id.is_empty() {
            git_revparse_id
        } else {
            env::var("GIT_COMMIT_ID").unwrap_or_default().trim().to_owned()
        };

        let mut f = File::create(&dest_path).unwrap();
        write!(
            f,
            "
            /// The current git HEAD hash. This constant is autogenerated at build time.
            pub static GIT_COMMIT_ID: &'static str = \"{}\";
            ",
            commit_id,
        ).expect("writing git ID");
    }
}

